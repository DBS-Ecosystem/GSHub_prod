#pragma version 4

// check if the app is being created
txn ApplicationID
int 0
==
bz not_creation

txn NumAppArgs
int 2
==
assert

byte "TotalRegistered"
int 0
app_global_put

byte "Type1"
txna ApplicationArgs 0
app_global_put

byte "Type2"
txna ApplicationArgs 1
app_global_put

byte "SPOTotal"
int 0
app_global_put

byte "SMETotal"
int 0
app_global_put

b done

not_creation:

txn OnCompletion
int NoOp
==
bnz handle_noop

txn OnCompletion
int OptIn
==
bnz handle_optin

txn OnCompletion
int CloseOut
==
bnz handle_closeout

txn OnCompletion
int DeleteApplication
==
bnz handle_deleteapp

// Unexpected OnCompletion value. Should be unreachable
err

handle_noop:
b done

//user should also indicate his type by providing it as an argument to the OptIn transaction
handle_optin:
txn NumAppArgs
int 1
==
assert

txna ApplicationArgs 0
byte "Type1"
app_global_get
==
txna ApplicationArgs 0
byte "Type2"
app_global_get
==

// Assuming the assert below passed, this value will be 0 if user type is SPO and 1 if user type is SME
// We'll store it for later to figure out which team's total to increment
dup
store 0 
||
assert

//increment total amount of registered users
byte "TotalRegistered"
dup
app_global_get

// increment the value
int 1
+
dup
store 0
app_global_put

int 0
byte "MyType"
txna ApplicationArgs 0
app_local_put

load 0
bnz SMEReg

// User type is SPO
byte "SPOTotal"
b skip0

SMEReg:
// User type is SME
byte "SMETotal"
skip0:

// Increment the state
dup
app_global_get
gtxn 0 Amount
+
app_global_put

b done

handle_closeout:
b done

handle_deleteapp:
txn Sender
global CreatorAddress
==
return

done:
int 1
return